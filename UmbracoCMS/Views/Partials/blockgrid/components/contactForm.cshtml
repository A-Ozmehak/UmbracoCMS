@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>;
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;
@{
	var sectionTitle = Model?.Content.Value<string>("sectionTitle");
    var headline = Model?.Content.Value<string>("headline");
    var text = Model?.Content.Value<string>("text");
    var buttonLabel = Model?.Content.Value<string>("buttonLabel");
	var buttonBackgroundColor = Model?.Content?.Value<ColorPickerValueConverter.PickedColor>("buttonBackgroundColor")?.Label.ToLower() ?? null;

    bool.TryParse(ViewData["error_name"]?.ToString()!, out bool error_name);
    bool.TryParse(ViewData["error_email"]?.ToString()!, out bool error_email);
    bool.TryParse(ViewData["error_service"]?.ToString()!, out bool error_service);

   
}

@if (sectionTitle == "")
{
     <h3>@headline</h3>
}

<div class="container">
    <div class="text-content">
        @if (sectionTitle != "")
        {
            <span>@sectionTitle</span>
            <h3>@headline</h3>
        }
        <p>@text</p>
    </div>
    @if (ViewData["success"] != null)
    {
        <h4 class="success-message">@ViewData["success"]</h4>
    }
    else
    {
        @using (Html.BeginUmbracoForm("HandleSubmit", "ContactSurface", FormMethod.Post, new { id = "contactForm" }))
        {
            <div class="contact-input">
                <div class="input-container">
                    <input id="name" name="name" type="text" placeholder="Name" value="@ViewData["name"]">
                    <span id="errorName" style="color:red; display:@(error_name ? "block" : "none");">
                        Name is required.
                    </span>
                </div>
                <div class="input-container">
                    <input id="phone" name="phone" type="text" placeholder="Phone" value="@ViewData["phone"]">
                </div>
            </div>
            <div class="contact-input">
                  <div class="input-container">
                    <input id="email" name="email" type="email" placeholder="Email address" value="@ViewData["email"]">
                    <span id="errorEmail" style="color:red; display:@(error_email ? "block" : "none");">
                        Email is required.
                    </span>
                </div>
                <select id="service" name="service" value="@ViewData["service"]">
                    <option value="">Select a Service</option>
                    <option value="Risk management">Risk Management</option>
                    <option value="Bonds & Commodities">Bonds & Commodities</option>
                    <option value="Assurance & Audits">Assurance & Audits</option>
                    <option value="Tax and Trusts">Tax and Trusts</option>
                    <option value="Financial Advisor">Financial Advisor</option>
                    <option value="Statistic Advisors">Statistic Advisors</option>
                    <option value="Annual Reports">Annual Reports</option>
                    <option value="Office Management">Office Management</option>
                </select>
                <span id="errorService" style="color:red; display:@(error_service ? "block" : "none");">
                    Service is required.
                </span>
            </div>

            <button type="submit" class="btn-@buttonBackgroundColor">Send</button>
        }
    }
</div> 